name: .NET
on:
  push:
  pull_request:
  workflow_dispatch:
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-22.04, macos-latest]
        arch: [x64, arm64]
        include:
        - rid: win
          os: windows-latest
        - rid: linux
          os: ubuntu-22.04
        - rid: osx
          os: macos-latest
        - exec: ArknightsWorkshop.exe
          os: windows-latest
        - exec: ArknightsWorkshop
          os: ubuntu-22.04
        - exec: ArknightsWorkshop
          os: macos-latest
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Install linux arm64 linker
      if: ${{ matrix.rid == 'linux' && matrix.arch == 'arm64' }}
      run: |
        sudo dpkg --add-architecture arm64
        sudo bash -c 'cat > /etc/apt/sources.list.d/arm64.list <<EOF
        deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy main restricted
        deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy-updates main restricted
        deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy-backports main restricted universe multiverse
        EOF'
        sudo sed -i -e 's/deb http/deb [arch=amd64] http/g' /etc/apt/sources.list
        sudo sed -i -e 's/deb mirror/deb [arch=amd64] mirror/g' /etc/apt/sources.list
        sudo apt update
        sudo apt install -y clang llvm binutils-aarch64-linux-gnu gcc-aarch64-linux-gnu zlib1g-dev:arm64
    - name: Build
      run: dotnet publish -c Release -r ${{ matrix.rid }}-${{ matrix.arch }} -p:PublishAot=true
    - name: Upload executable
      uses: actions/upload-artifact@v4.3.3
      with:
        name: ${{ matrix.rid }}-${{ matrix.arch }}
        path: bin/Release/net8.0/${{ matrix.rid }}-${{ matrix.arch }}/native/${{ matrix.exec }}
